{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mh\\\\Desktop\\\\searchengine\\\\src\\\\components\\\\SearchEngine.js\";\nimport React from 'react';\nimport SearchBarPage from './SearchBarPage';\nimport CompanyPage from './CompanyPage';\nimport names from './names';\n\nclass SearchEngineApp extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      // le boolean isLogged précise le component utilisé (SearchBarPage / CompanyPage)\n      // true => page des informations de l'entreprise: CompanyPage\n      // false => page de recherche: SearchBarPage\n      isLogged: false,\n      companyName: null,\n      errorMessage: \"\"\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  } //  handleClick se charge de switcher de la page de recherche\n  //  vers la page d'info (et vice versa)\n\n\n  handleClick() {\n    let infoError = true;\n    names.forEach(name => {\n      if (this.state.companyName.toLowerCase() == name.toLowerCase()) {\n        infoError = false;\n        this.setState(prevState => {\n          return {\n            isLogged: !prevState.isLogged,\n            companyName: name\n          };\n        });\n      }\n    });\n\n    if (infoError) {\n      this.setState({\n        errorMessage: \"We couldn't find the company\"\n      });\n    }\n  } //  handleChange est affecté à l'input dans lequel l'utilisateur entre\n  //  l'entreprise qu'il cherche handleChange se charge de mettre à jour\n  //  la valeur de companyName au fur et à mesure\n\n\n  handleChange(event) {\n    this.setState({\n      isLogged: false,\n      companyName: event.target.value\n    });\n  } //  handleNew se charge du passage de la page d'une entreprise à une autre\n\n\n  handleNew(event) {\n    this.setState({\n      isLogged: false,\n      companyName: event\n    });\n    setTimeout(function () {\n      this.setState({\n        isLogged: true,\n        companyName: this.state.companyName\n      });\n    }.bind(this), 1);\n  }\n\n  render() {\n    return this.state.isLogged ? /*#__PURE__*/React.createElement(CompanyPage, {\n      companyName: this.state.companyName,\n      handleClick: this.handleClick,\n      handleNew: this.handleNew,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(SearchBarPage, {\n      error: this.state.errorMessage,\n      handleChange: this.handleChange,\n      handleClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    });\n  }\n\n}\n\nexport default SearchEngineApp;","map":{"version":3,"sources":["C:/Users/Mh/Desktop/searchengine/src/components/SearchEngine.js"],"names":["React","SearchBarPage","CompanyPage","names","SearchEngineApp","Component","constructor","state","isLogged","companyName","errorMessage","handleClick","bind","handleChange","handleNew","infoError","forEach","name","toLowerCase","setState","prevState","event","target","value","setTimeout","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAIA,MAAMC,eAAN,SAA8BJ,KAAK,CAACK,SAApC,CAA8C;AAC1CC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACT;AACA;AACA;AACAC,MAAAA,QAAQ,EAAE,KAJD;AAKTC,MAAAA,WAAW,EAAE,IALJ;AAMTC,MAAAA,YAAY,EAAE;AANL,KAAb;AAQA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,SAAL,GAAiB,KAAKA,SAAL,CAAeF,IAAf,CAAoB,IAApB,CAAjB;AACH,GAdyC,CAgB1C;AACA;;;AACAD,EAAAA,WAAW,GAAG;AACV,QAAII,SAAS,GAAG,IAAhB;AACAZ,IAAAA,KAAK,CAACa,OAAN,CAAcC,IAAI,IAAI;AAClB,UAAI,KAAKV,KAAL,CAAWE,WAAX,CAAuBS,WAAvB,MAAwCD,IAAI,CAACC,WAAL,EAA5C,EAAgE;AAC5DH,QAAAA,SAAS,GAAG,KAAZ;AACA,aAAKI,QAAL,CAAcC,SAAS,IAAI;AACvB,iBAAO;AACHZ,YAAAA,QAAQ,EAAE,CAACY,SAAS,CAACZ,QADlB;AAEHC,YAAAA,WAAW,EAAEQ;AAFV,WAAP;AAIH,SALD;AAMH;AACJ,KAVD;;AAWA,QAAIF,SAAJ,EAAe;AACX,WAAKI,QAAL,CAAc;AACVT,QAAAA,YAAY,EAAE;AADJ,OAAd;AAGH;AAEJ,GArCyC,CAuC1C;AACA;AACA;;;AACAG,EAAAA,YAAY,CAACQ,KAAD,EAAQ;AAChB,SAAKF,QAAL,CAAc;AACVX,MAAAA,QAAQ,EAAE,KADA;AAEVC,MAAAA,WAAW,EAAEY,KAAK,CAACC,MAAN,CAAaC;AAFhB,KAAd;AAIH,GA/CyC,CAiD1C;;;AACAT,EAAAA,SAAS,CAACO,KAAD,EAAQ;AACb,SAAKF,QAAL,CAAc;AACVX,MAAAA,QAAQ,EAAE,KADA;AAEVC,MAAAA,WAAW,EAAEY;AAFH,KAAd;AAIAG,IAAAA,UAAU,CAAC,YAAY;AACnB,WAAKL,QAAL,CAAc;AACVX,QAAAA,QAAQ,EAAE,IADA;AAEVC,QAAAA,WAAW,EAAE,KAAKF,KAAL,CAAWE;AAFd,OAAd;AAIH,KALU,CAKTG,IALS,CAKJ,IALI,CAAD,EAKI,CALJ,CAAV;AAMH;;AAEDa,EAAAA,MAAM,GAAG;AACL,WACI,KAAKlB,KAAL,CAAWC,QAAX,gBACI,oBAAC,WAAD;AAAa,MAAA,WAAW,EAAE,KAAKD,KAAL,CAAWE,WAArC;AAAkD,MAAA,WAAW,EAAE,KAAKE,WAApE;AAAiF,MAAA,SAAS,EAAE,KAAKG,SAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,gBAEM,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWG,YAAjC;AAA+C,MAAA,YAAY,EAAE,KAAKG,YAAlE;AAAgF,MAAA,WAAW,EAAE,KAAKF,WAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHV;AAKH;;AArEyC;;AAwE9C,eAAeP,eAAf","sourcesContent":["import React from 'react'\r\nimport SearchBarPage from './SearchBarPage'\r\nimport CompanyPage from './CompanyPage';\r\nimport names from './names'\r\n\r\n\r\n\r\nclass SearchEngineApp extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            // le boolean isLogged précise le component utilisé (SearchBarPage / CompanyPage)\r\n            // true => page des informations de l'entreprise: CompanyPage\r\n            // false => page de recherche: SearchBarPage\r\n            isLogged: false,\r\n            companyName: null,\r\n            errorMessage: \"\"\r\n        }\r\n        this.handleClick = this.handleClick.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleNew = this.handleNew.bind(this)\r\n    }\r\n\r\n    //  handleClick se charge de switcher de la page de recherche\r\n    //  vers la page d'info (et vice versa)\r\n    handleClick() {\r\n        let infoError = true\r\n        names.forEach(name => {\r\n            if (this.state.companyName.toLowerCase() == name.toLowerCase()) {\r\n                infoError = false\r\n                this.setState(prevState => {\r\n                    return {\r\n                        isLogged: !prevState.isLogged,\r\n                        companyName: name\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        if (infoError) {\r\n            this.setState({\r\n                errorMessage: \"We couldn't find the company\"\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    //  handleChange est affecté à l'input dans lequel l'utilisateur entre\r\n    //  l'entreprise qu'il cherche handleChange se charge de mettre à jour\r\n    //  la valeur de companyName au fur et à mesure\r\n    handleChange(event) {\r\n        this.setState({\r\n            isLogged: false,\r\n            companyName: event.target.value\r\n        })\r\n    }\r\n\r\n    //  handleNew se charge du passage de la page d'une entreprise à une autre\r\n    handleNew(event) {\r\n        this.setState({\r\n            isLogged: false,\r\n            companyName: event\r\n        })\r\n        setTimeout(function () {\r\n            this.setState({\r\n                isLogged: true,\r\n                companyName: this.state.companyName\r\n            })\r\n        }.bind(this), 1);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.state.isLogged ?\r\n                <CompanyPage companyName={this.state.companyName} handleClick={this.handleClick} handleNew={this.handleNew} />\r\n                : <SearchBarPage error={this.state.errorMessage} handleChange={this.handleChange} handleClick={this.handleClick} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchEngineApp"]},"metadata":{},"sourceType":"module"}