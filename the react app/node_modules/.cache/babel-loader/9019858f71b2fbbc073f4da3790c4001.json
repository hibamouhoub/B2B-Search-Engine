{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mh\\\\Desktop\\\\searchengine\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport CompanyNetwork from './components/CompanyNetwork';\nimport { Network, Node, Edge } from 'react-vis-network';\nimport MyNav from './components/nav';\nimport names from './names';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      networkComponent: React.createRef(),\n      currentCompany: {},\n      relations: []\n    };\n  }\n\n  componentDidMount() {\n    this.state.networkComponent.current.network.on(\"click\", event => {\n      console.log(\"clicked\", names.includes(event.nodes[0]));\n\n      if (names.includes(event.nodes[0])) {}\n    });\n    const api = axios.create({\n      baseURL: 'http://localhost:9200/proto/_search?q=company_name:\"' + this.props.companyName + '\"'\n    });\n    api.get('').then(async res => {\n      let var1 = res.data.hits.hits[0]._source;\n      let stringSearch = 'http://localhost:9200/proto/_search?q=id:' + var1.Partenaire__002 + '%20OR%20id:' + var1.Partenaire__001 + '%20OR%20id:' + var1[\"Clients__-\"] + '%20OR%20id:' + var1[\"filiales__-\"] + '%20OR%20id:' + var1[\"fournisseur__-\"] + '%20OR%20id:' + var1.hearquarter;\n      api.get(stringSearch).then(async ress => {\n        let relations = [];\n\n        for (let i = 0; i < ress.data.hits.hits.length; i++) {\n          relations.push(ress.data.hits.hits[i]._source);\n        } //console.log(var1, relations)\n\n\n        this.state = {\n          currentCompany: {},\n          relations: []\n        };\n        this.setState({\n          currentCompany: var1,\n          relations: relations\n        });\n      });\n    });\n  }\n\n  render() {\n    const partnersNode = this.state.relations.map(partner => {\n      let colorNode;\n      let shape = \"box\";\n      let font = {\n        color: \"white\",\n        size: 20\n      };\n\n      if (partner.id == this.state.currentCompany.hearquarter || partner.id == this.state.currentCompany[\"filiales__-\"]) {\n        colorNode = \"#888888\";\n      } else {\n        if (partner.id == this.state.currentCompany.Partenaire__002 || partner.id == this.state.currentCompany.Partenaire__001) {\n          colorNode = \"#AC3B61\";\n        } else {\n          if (partner.id == this.state.currentCompany[\"fournisseur__-\"]) {\n            colorNode = \"#123C69\";\n          } else {\n            if (partner.id == this.state.currentCompany[\"Clients__-\"]) {\n              colorNode = \"#FFAE42\";\n            } else {\n              colorNode = \"#000000\";\n            }\n          }\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(Node, {\n        id: partner.company_name,\n        label: partner.company_name,\n        color: colorNode,\n        shape: shape,\n        font: font,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 14\n        }\n      });\n    });\n    const partnersEdges = this.state.relations.map(partner => {\n      if (partner.id == this.state.currentCompany.hearquarter) {\n        return /*#__PURE__*/React.createElement(Edge, {\n          id: this.state.currentCompany.id + partner.id,\n          from: \"200\",\n          to: partner.company_name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 16\n          }\n        });\n      }\n\n      if (partner.id == this.state.currentCompany.Partenaire__002 || partner.id == this.state.currentCompany.Partenaire__001) {\n        return /*#__PURE__*/React.createElement(Edge, {\n          id: this.state.currentCompany.id + partner.id,\n          from: \"100\",\n          to: partner.company_name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 16\n          }\n        });\n      }\n\n      if (partner.id == this.state.currentCompany[\"fournisseur__-\"]) {\n        return /*#__PURE__*/React.createElement(Edge, {\n          id: this.state.currentCompany.id + partner.id,\n          from: \"300\",\n          to: partner.company_name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 16\n          }\n        });\n      }\n\n      if (partner.id == this.state.currentCompany[\"Clients__-\"]) {\n        return /*#__PURE__*/React.createElement(Edge, {\n          id: this.state.currentCompany.id + partner.id,\n          from: \"400\",\n          to: partner.company_name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 16\n          }\n        });\n      }\n\n      if (partner.id == this.state.currentCompany[\"filiales__-\"]) {\n        return /*#__PURE__*/React.createElement(Edge, {\n          id: this.state.currentCompany.id + partner.id,\n          from: \"500\",\n          to: partner.company_name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 16\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(Edge, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 14\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MyNav, {\n      handleClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-4 ml-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CompanyNetwork, {\n      currentCompany: this.state.currentCompany,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"zmer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Network, {\n      ref: this.state.networkComponent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Node, {\n      id: \"1000\",\n      label: this.state.currentCompany.company_name,\n      color: \"#000000\",\n      font: {\n        color: \"white\",\n        size: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Node, {\n      id: \"100\",\n      label: \"Partenaires\",\n      color: \"#AC3B61\",\n      fixed: {\n        x: true,\n        y: true\n      },\n      size: \"15\",\n      shape: \"dot\",\n      font: {\n        color: \"#AC3B61\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Node, {\n      id: \"200\",\n      label: \"Headquarter\",\n      color: \"#888888\",\n      fixed: {\n        x: true,\n        y: true\n      },\n      size: \"15\",\n      shape: \"dot\",\n      font: {\n        color: \"#888888\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Node, {\n      id: \"300\",\n      label: \"Fournisseurs\",\n      color: \"#123C69\",\n      fixed: {\n        x: true,\n        y: true\n      },\n      size: \"15\",\n      shape: \"dot\",\n      font: {\n        color: \"#123C69\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Node, {\n      id: \"400\",\n      label: \"Clients\",\n      color: \"#FFAE42\",\n      fixed: {\n        x: true,\n        y: true\n      },\n      size: \"15\",\n      shape: \"dot\",\n      font: {\n        color: \"#FFAE42\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Node, {\n      id: \"500\",\n      label: \"Filiales\",\n      color: \"#888888\",\n      fixed: {\n        x: true,\n        y: true\n      },\n      size: \"15\",\n      shape: \"dot\",\n      font: {\n        color: \"#888888\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Edge, {\n      id: \"100\",\n      from: \"1000\",\n      to: \"100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Edge, {\n      id: \"200\",\n      from: \"1000\",\n      to: \"200\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Edge, {\n      id: \"300\",\n      from: \"1000\",\n      to: \"300\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Edge, {\n      id: \"400\",\n      from: \"1000\",\n      to: \"400\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Edge, {\n      id: \"500\",\n      from: \"1000\",\n      to: \"500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }), partnersEdges, partnersNode)))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Mh/Desktop/searchengine/src/App.js"],"names":["React","axios","CompanyNetwork","Network","Node","Edge","MyNav","names","App","Component","constructor","state","networkComponent","createRef","currentCompany","relations","componentDidMount","current","network","on","event","console","log","includes","nodes","api","create","baseURL","props","companyName","get","then","res","var1","data","hits","_source","stringSearch","Partenaire__002","Partenaire__001","hearquarter","ress","i","length","push","setState","render","partnersNode","map","partner","colorNode","shape","font","color","size","id","company_name","partnersEdges","handleClick","x","y"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport axios from 'axios'\nimport CompanyNetwork from './components/CompanyNetwork'\nimport { Network, Node, Edge } from 'react-vis-network'\nimport MyNav from './components/nav'\nimport names from './names'\n\n\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      networkComponent: React.createRef(),\n      currentCompany: {},\n      relations: []\n    }\n  }\n  componentDidMount() {\n    this.state.networkComponent.current.network.on(\"click\", event => {\n      console.log(\"clicked\", names.includes(event.nodes[0]))\n      if (names.includes(event.nodes[0])){\n        \n      }\n      \n    });\n    const api = axios.create({\n      baseURL: 'http://localhost:9200/proto/_search?q=company_name:\"' + this.props.companyName + '\"'\n    })\n    api.get('')\n      .then(async (res) => {\n        let var1 = res.data.hits.hits[0]._source\n        let stringSearch = 'http://localhost:9200/proto/_search?q=id:'\n          + var1.Partenaire__002 + '%20OR%20id:'\n          + var1.Partenaire__001 + '%20OR%20id:'\n          + var1[\"Clients__-\"] + '%20OR%20id:'\n          + var1[\"filiales__-\"] + '%20OR%20id:'\n          + var1[\"fournisseur__-\"] + '%20OR%20id:'\n          + var1.hearquarter\n        api.get(stringSearch)\n          .then(async (ress) => {\n            let relations = []\n            for (let i = 0; i < ress.data.hits.hits.length; i++) {\n              relations.push(ress.data.hits.hits[i]._source)\n            }\n            //console.log(var1, relations)\n            this.state = { currentCompany: {}, relations: [] }\n            this.setState({\n              currentCompany: var1,\n              relations: relations\n            })\n          })\n      });\n  }\n\n  render() {\n    const partnersNode = this.state.relations.map(partner => {\n      let colorNode\n      let shape = \"box\"\n      let font = { color: \"white\", size: 20 }\n      if (partner.id == this.state.currentCompany.hearquarter || partner.id == this.state.currentCompany[\"filiales__-\"]) {\n        colorNode = \"#888888\"\n      } else {\n        if (partner.id == this.state.currentCompany.Partenaire__002 || partner.id == this.state.currentCompany.Partenaire__001) {\n          colorNode = \"#AC3B61\"\n        } else {\n          if (partner.id == this.state.currentCompany[\"fournisseur__-\"]) {\n            colorNode = \"#123C69\"\n          } else {\n            if (partner.id == this.state.currentCompany[\"Clients__-\"]) {\n              colorNode = \"#FFAE42\"\n            } else {\n              colorNode = \"#000000\"\n            }\n          }\n        }\n      }\n      return <Node id={partner.company_name} label={partner.company_name} color={colorNode} shape={shape} font={font} />\n    })\n\n\n    const partnersEdges = this.state.relations.map(partner => {\n      if (partner.id == this.state.currentCompany.hearquarter) {\n        return <Edge id={this.state.currentCompany.id + partner.id} from=\"200\" to={partner.company_name} />\n      }\n      if (partner.id == this.state.currentCompany.Partenaire__002 || partner.id == this.state.currentCompany.Partenaire__001) {\n        return <Edge id={this.state.currentCompany.id + partner.id} from=\"100\" to={partner.company_name} />\n      }\n      if (partner.id == this.state.currentCompany[\"fournisseur__-\"]) {\n        return <Edge id={this.state.currentCompany.id + partner.id} from=\"300\" to={partner.company_name} />\n      }\n      if (partner.id == this.state.currentCompany[\"Clients__-\"]) {\n        return <Edge id={this.state.currentCompany.id + partner.id} from=\"400\" to={partner.company_name} />\n      }\n      if (partner.id == this.state.currentCompany[\"filiales__-\"]) {\n        return <Edge id={this.state.currentCompany.id + partner.id} from=\"500\" to={partner.company_name} />\n      }\n      return <Edge />\n    })\n\n\n    return (\n      <div>\n        <MyNav handleClick={this.handleClick} />\n        <div className=\"row mt-5\">\n          <div className=\"col-sm-4 ml-5\">\n            <CompanyNetwork currentCompany={this.state.currentCompany} />\n          </div>\n          <div className=\"col-sm-7\">\n            <div className=\"zmer\">\n              <Network ref={this.state.networkComponent}>\n                <Node id=\"1000\" label={this.state.currentCompany.company_name} color=\"#000000\" font={{ color: \"white\", size: 20 }} />\n                <Node id=\"100\" label=\"Partenaires\" color=\"#AC3B61\" fixed={{ x: true, y: true }} size=\"15\" shape=\"dot\" font={{ color: \"#AC3B61\" }} />\n                <Node id=\"200\" label=\"Headquarter\" color=\"#888888\" fixed={{ x: true, y: true }} size=\"15\" shape=\"dot\" font={{ color: \"#888888\" }} />\n                <Node id=\"300\" label=\"Fournisseurs\" color=\"#123C69\" fixed={{ x: true, y: true }} size=\"15\" shape=\"dot\" font={{ color: \"#123C69\" }} />\n                <Node id=\"400\" label=\"Clients\" color=\"#FFAE42\" fixed={{ x: true, y: true }} size=\"15\" shape=\"dot\" font={{ color: \"#FFAE42\" }} />\n                <Node id=\"500\" label=\"Filiales\" color=\"#888888\" fixed={{ x: true, y: true }} size=\"15\" shape=\"dot\" font={{ color: \"#888888\" }} />\n                <Edge id=\"100\" from=\"1000\" to=\"100\" />\n                <Edge id=\"200\" from=\"1000\" to=\"200\" />\n                <Edge id=\"300\" from=\"1000\" to=\"300\" />\n                <Edge id=\"400\" from=\"1000\" to=\"400\" />\n                <Edge id=\"500\" from=\"1000\" to=\"500\" />\n                {partnersEdges}\n                {partnersNode}\n              </Network>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}