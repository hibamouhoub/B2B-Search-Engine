{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mh\\\\Desktop\\\\searchengine\\\\src\\\\components\\\\CompanyPage.js\";\nimport React from 'react'; //import './App.css';\n\nimport axios from 'axios';\nimport CompanyInfo from './CompanyInfo';\nimport { Network, Node, Edge } from 'react-vis-network';\nimport MyNav from './nav';\nimport names from './names';\n\nclass CompanyPage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      networkComponent: React.createRef(),\n      //  currentCompany est un objet JSON qui contient tous les infos de l'entreprise actuelle\n      currentCompany: {},\n      relations: [],\n      //  Les booleans suivants servent à gérer l'affichage des noeuds qui précisent le type de relation entre \n      //  l'entreprise actuelle et les autres. Par exemple, si l'entreprise actuelle \n      partners: false,\n      headquarter: false,\n      filiales: false,\n      clients: false,\n      fournisseurs: false\n    };\n  }\n\n  componentDidMount() {\n    this.state.networkComponent.current.network.on(\"click\", event => {\n      //console.log(\"clicked\", names.includes(event.nodes[0]))\n      if (names.includes(event.nodes[0])) {\n        this.props.handleNew(event.nodes[0]);\n      }\n    });\n    const api = axios.create({\n      baseURL: 'http://localhost:9200/proto/_search?q=company_name:\"' + this.props.companyName + '\"'\n    });\n    api.get('').then(async res => {\n      let var1 = res.data.hits.hits[0]._source;\n      let stringSearch = 'http://localhost:9200/proto/_search?q=id:' + var1.Partenaire__002 + '%20OR%20id:' + var1.Partenaire__001 + '%20OR%20id:' + var1[\"Clients__-\"] + '%20OR%20id:' + var1[\"filiales__-\"] + '%20OR%20id:' + var1[\"fournisseur__-\"] + '%20OR%20id:' + var1.hearquarter;\n      api.get(stringSearch).then(async ress => {\n        let relations = [];\n        let partnerz = false,\n            clients = false,\n            fournisseurs = false,\n            heads = false,\n            filiales = false;\n\n        for (let i = 0; i < ress.data.hits.hits.length; i++) {\n          relations.push(ress.data.hits.hits[i]._source);\n\n          if (var1.Partenaire__001 == ress.data.hits.hits[i]._source.id || var1.Partenaire__002 == ress.data.hits.hits[i]._source.id) {\n            partnerz = true;\n          }\n\n          if (var1[\"Clients__-\"] == ress.data.hits.hits[i]._source.id) {\n            clients = true;\n          }\n\n          if (var1[\"fournisseur__-\"] == ress.data.hits.hits[i]._source.id) {\n            fournisseurs = true;\n          }\n\n          if (var1.hearquarter == ress.data.hits.hits[i]._source.id) {\n            heads = true;\n          }\n\n          if (var1[\"filiales__-\"] == ress.data.hits.hits[i]._source.id) {\n            filiales = true;\n          }\n        } //console.log(var1, relations)\n\n\n        this.state = {\n          currentCompany: {},\n          relations: []\n        };\n        this.setState({\n          currentCompany: var1,\n          relations: relations,\n          partners: partnerz,\n          headquarter: heads,\n          filiales: filiales,\n          clients: clients,\n          fournisseurs: fournisseurs\n        });\n      });\n    });\n  }\n\n  render() {\n    const partnersNode = this.state.relations.map(partner => {\n      let colorNode, x, y;\n      let shape = \"box\";\n      let font = {\n        color: \"white\",\n        size: 20\n      };\n\n      if (partner.id == this.state.currentCompany.hearquarter || partner.id == this.state.currentCompany[\"filiales__-\"]) {\n        colorNode = \"#888888\";\n        x = 400;\n        y = 0;\n      } else {\n        if (partner.id == this.state.currentCompany.Partenaire__002 || partner.id == this.state.currentCompany.Partenaire__001) {\n          colorNode = \"#AC3B61\";\n          x = 400;\n          y = 200;\n        } else {\n          if (partner.id == this.state.currentCompany[\"fournisseur__-\"]) {\n            colorNode = \"#123C69\";\n            x = 400;\n            y = 100;\n          } else {\n            if (partner.id == this.state.currentCompany[\"Clients__-\"]) {\n              colorNode = \"#FFAE42\";\n              x = 400;\n              y = 0;\n            } else {\n              colorNode = \"#000000\";\n            }\n          }\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(Node, {\n        id: partner.company_name,\n        x: x,\n        y: y,\n        label: partner.company_name,\n        color: colorNode,\n        shape: shape,\n        font: font,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 14\n        }\n      });\n    });\n    const partnersEdges = this.state.relations.map(partner => {\n      if (partner.id == this.state.currentCompany.hearquarter) {\n        return /*#__PURE__*/React.createElement(Edge, {\n          id: this.state.currentCompany.id + partner.id,\n          from: \"200\",\n          to: partner.company_name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 16\n          }\n        });\n      }\n\n      if (partner.id == this.state.currentCompany.Partenaire__002 || partner.id == this.state.currentCompany.Partenaire__001) {\n        return /*#__PURE__*/React.createElement(Edge, {\n          id: this.state.currentCompany.id + partner.id,\n          from: \"100\",\n          to: partner.company_name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 16\n          }\n        });\n      }\n\n      if (partner.id == this.state.currentCompany[\"fournisseur__-\"]) {\n        return /*#__PURE__*/React.createElement(Edge, {\n          id: this.state.currentCompany.id + partner.id,\n          from: \"300\",\n          to: partner.company_name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 16\n          }\n        });\n      }\n\n      if (partner.id == this.state.currentCompany[\"Clients__-\"]) {\n        return /*#__PURE__*/React.createElement(Edge, {\n          id: this.state.currentCompany.id + partner.id,\n          from: \"400\",\n          to: partner.company_name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 16\n          }\n        });\n      }\n\n      if (partner.id == this.state.currentCompany[\"filiales__-\"]) {\n        return /*#__PURE__*/React.createElement(Edge, {\n          id: this.state.currentCompany.id + partner.id,\n          from: \"500\",\n          to: partner.company_name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 16\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(Edge, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 14\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MyNav, {\n      handleClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-4 ml-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CompanyInfo, {\n      currentCompany: this.state.currentCompany,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"zmer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Network, {\n      ref: this.state.networkComponent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Node, {\n      id: \"1000\",\n      label: this.state.currentCompany.company_name,\n      color: \"#000000\",\n      x: \"0\",\n      y: \"100\",\n      fixed: {\n        x: true,\n        y: true\n      },\n      font: {\n        color: \"white\",\n        size: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }), this.state.partners ? /*#__PURE__*/React.createElement(Node, {\n      id: \"100\",\n      label: \"Partenaires\",\n      color: \"#AC3B61\",\n      x: \"200\",\n      y: \"200\",\n      fixed: {\n        x: true,\n        y: true\n      },\n      size: \"15\",\n      shape: \"dot\",\n      font: {\n        color: \"#AC3B61\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 40\n      }\n    }) : /*#__PURE__*/React.createElement(Edge, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 191\n      }\n    }), this.state.headquarter ? /*#__PURE__*/React.createElement(Node, {\n      id: \"200\",\n      label: \"Headquarter\",\n      color: \"#888888\",\n      x: \"200\",\n      y: \"0\",\n      fixed: {\n        x: true,\n        y: true\n      },\n      size: \"15\",\n      shape: \"dot\",\n      font: {\n        color: \"#888888\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 43\n      }\n    }) : /*#__PURE__*/React.createElement(Edge, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 192\n      }\n    }), this.state.fournisseurs ? /*#__PURE__*/React.createElement(Node, {\n      id: \"300\",\n      label: \"Fournisseurs\",\n      color: \"#123C69\",\n      x: \"200\",\n      y: \"100\",\n      fixed: {\n        x: true,\n        y: true\n      },\n      size: \"15\",\n      shape: \"dot\",\n      font: {\n        color: \"#123C69\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 44\n      }\n    }) : /*#__PURE__*/React.createElement(Edge, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 196\n      }\n    }), this.state.clients ? /*#__PURE__*/React.createElement(Node, {\n      id: \"400\",\n      label: \"Clients\",\n      color: \"#FFAE42\",\n      size: \"15\",\n      x: \"200\",\n      y: \"0\",\n      fixed: {\n        x: true,\n        y: true\n      },\n      shape: \"dot\",\n      font: {\n        color: \"#FFAE42\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 39\n      }\n    }) : /*#__PURE__*/React.createElement(Edge, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 184\n      }\n    }), this.state.filiales ? /*#__PURE__*/React.createElement(Node, {\n      id: \"500\",\n      label: \"Filiales\",\n      color: \"#888888\",\n      size: \"15\",\n      fixed: {\n        x: true,\n        y: true\n      },\n      shape: \"dot\",\n      font: {\n        color: \"#888888\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 40\n      }\n    }) : /*#__PURE__*/React.createElement(Edge, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 172\n      }\n    }), this.state.partners ? /*#__PURE__*/React.createElement(Edge, {\n      id: \"100\",\n      from: \"1000\",\n      smooth: {\n        enabled: true\n      },\n      to: \"100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 40\n      }\n    }) : /*#__PURE__*/React.createElement(Edge, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 108\n      }\n    }), this.state.headquarter ? /*#__PURE__*/React.createElement(Edge, {\n      id: \"200\",\n      from: \"1000\",\n      smooth: {\n        enabled: true\n      },\n      to: \"200\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 43\n      }\n    }) : /*#__PURE__*/React.createElement(Edge, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 111\n      }\n    }), this.state.fournisseurs ? /*#__PURE__*/React.createElement(Edge, {\n      id: \"300\",\n      from: \"1000\",\n      smooth: {\n        enabled: true\n      },\n      to: \"300\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 44\n      }\n    }) : /*#__PURE__*/React.createElement(Edge, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 112\n      }\n    }), this.state.clients ? /*#__PURE__*/React.createElement(Edge, {\n      id: \"400\",\n      from: \"1000\",\n      smooth: {\n        enabled: true\n      },\n      to: \"400\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 39\n      }\n    }) : /*#__PURE__*/React.createElement(Edge, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 107\n      }\n    }), this.state.filiales ? /*#__PURE__*/React.createElement(Edge, {\n      id: \"500\",\n      from: \"1000\",\n      smooth: {\n        enabled: true\n      },\n      to: \"500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 40\n      }\n    }) : /*#__PURE__*/React.createElement(Edge, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 108\n      }\n    }), partnersEdges, partnersNode)))));\n  }\n\n}\n\nexport default CompanyPage;","map":{"version":3,"sources":["C:/Users/Mh/Desktop/searchengine/src/components/CompanyPage.js"],"names":["React","axios","CompanyInfo","Network","Node","Edge","MyNav","names","CompanyPage","Component","constructor","state","networkComponent","createRef","currentCompany","relations","partners","headquarter","filiales","clients","fournisseurs","componentDidMount","current","network","on","event","includes","nodes","props","handleNew","api","create","baseURL","companyName","get","then","res","var1","data","hits","_source","stringSearch","Partenaire__002","Partenaire__001","hearquarter","ress","partnerz","heads","i","length","push","id","setState","render","partnersNode","map","partner","colorNode","x","y","shape","font","color","size","company_name","partnersEdges","handleClick","enabled"],"mappings":"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","sourcesContent":["import React from 'react';\n//import './App.css';\nimport axios from 'axios'\nimport CompanyInfo from './CompanyInfo'\nimport { Network, Node, Edge } from 'react-vis-network'\nimport MyNav from './nav'\nimport names from './names'\n\n\n\nclass CompanyPage extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      networkComponent: React.createRef(),\n      //  currentCompany est un objet JSON qui contient tous les infos de l'entreprise actuelle\n      currentCompany: {},\n      relations: [],\n      //  Les booleans suivants servent à gérer l'affichage des noeuds qui précisent le type de relation entre \n      //  l'entreprise actuelle et les autres. Par exemple, si l'entreprise actuelle \n      partners: false,\n      headquarter: false,\n      filiales: false,\n      clients: false,\n      fournisseurs: false\n    }\n  }\n  componentDidMount() {\n    this.state.networkComponent.current.network.on(\"click\", event => {\n      //console.log(\"clicked\", names.includes(event.nodes[0]))\n      if (names.includes(event.nodes[0])) {\n        this.props.handleNew(event.nodes[0])\n      }\n    });\n    const api = axios.create({\n      baseURL: 'http://localhost:9200/proto/_search?q=company_name:\"' + this.props.companyName + '\"'\n    })\n    api.get('')\n      .then(async (res) => {\n        let var1 = res.data.hits.hits[0]._source\n        let stringSearch = 'http://localhost:9200/proto/_search?q=id:'\n          + var1.Partenaire__002 + '%20OR%20id:'\n          + var1.Partenaire__001 + '%20OR%20id:'\n          + var1[\"Clients__-\"] + '%20OR%20id:'\n          + var1[\"filiales__-\"] + '%20OR%20id:'\n          + var1[\"fournisseur__-\"] + '%20OR%20id:'\n          + var1.hearquarter\n        api.get(stringSearch)\n          .then(async (ress) => {\n            let relations = []\n            let partnerz = false, clients = false, fournisseurs = false, heads = false, filiales = false\n            for (let i = 0; i < ress.data.hits.hits.length; i++) {\n              relations.push(ress.data.hits.hits[i]._source)\n              if (var1.Partenaire__001 == ress.data.hits.hits[i]._source.id || var1.Partenaire__002 == ress.data.hits.hits[i]._source.id) {\n                partnerz = true\n              }\n              if (var1[\"Clients__-\"] == ress.data.hits.hits[i]._source.id) {\n                clients = true\n              }\n              if (var1[\"fournisseur__-\"] == ress.data.hits.hits[i]._source.id) {\n                fournisseurs = true\n              }\n              if (var1.hearquarter == ress.data.hits.hits[i]._source.id) {\n                heads = true\n              }\n              if (var1[\"filiales__-\"] == ress.data.hits.hits[i]._source.id) {\n                filiales = true\n              }\n            }\n            //console.log(var1, relations)\n            this.state = { currentCompany: {}, relations: [] }\n            this.setState({\n              currentCompany: var1,\n              relations: relations,\n              partners: partnerz,\n              headquarter: heads,\n              filiales: filiales,\n              clients: clients,\n              fournisseurs: fournisseurs\n            })\n          })\n      });\n  }\n\n  render() {\n    const partnersNode = this.state.relations.map(partner => {\n      let colorNode, x, y\n      let shape = \"box\"\n      let font = { color: \"white\", size: 20 }\n      if (partner.id == this.state.currentCompany.hearquarter || partner.id == this.state.currentCompany[\"filiales__-\"]) {\n        colorNode = \"#888888\"\n        x = 400\n        y = 0\n      } else {\n        if (partner.id == this.state.currentCompany.Partenaire__002 || partner.id == this.state.currentCompany.Partenaire__001) {\n          colorNode = \"#AC3B61\"\n          x = 400\n          y = 200\n        } else {\n          if (partner.id == this.state.currentCompany[\"fournisseur__-\"]) {\n            colorNode = \"#123C69\"\n            x = 400\n            y = 100\n          } else {\n            if (partner.id == this.state.currentCompany[\"Clients__-\"]) {\n              colorNode = \"#FFAE42\"\n              x = 400\n              y = 0\n            } else {\n              colorNode = \"#000000\"\n            }\n          }\n        }\n      }\n      return <Node id={partner.company_name} x={x} y={y} label={partner.company_name} color={colorNode} shape={shape} font={font} />\n    })\n\n\n    const partnersEdges = this.state.relations.map(partner => {\n      if (partner.id == this.state.currentCompany.hearquarter) {\n        return <Edge id={this.state.currentCompany.id + partner.id} from=\"200\" to={partner.company_name} />\n      }\n      if (partner.id == this.state.currentCompany.Partenaire__002 || partner.id == this.state.currentCompany.Partenaire__001) {\n        return <Edge id={this.state.currentCompany.id + partner.id} from=\"100\" to={partner.company_name} />\n      }\n      if (partner.id == this.state.currentCompany[\"fournisseur__-\"]) {\n        return <Edge id={this.state.currentCompany.id + partner.id} from=\"300\" to={partner.company_name} />\n      }\n      if (partner.id == this.state.currentCompany[\"Clients__-\"]) {\n        return <Edge id={this.state.currentCompany.id + partner.id} from=\"400\" to={partner.company_name} />\n      }\n      if (partner.id == this.state.currentCompany[\"filiales__-\"]) {\n        return <Edge id={this.state.currentCompany.id + partner.id} from=\"500\" to={partner.company_name} />\n      }\n      return <Edge />\n    })\n\n\n    return (\n      <div>\n        <MyNav handleClick={this.handleClick} />\n        <div className=\"row mt-5\">\n          <div className=\"col-sm-4 ml-5\">\n            <CompanyInfo currentCompany={this.state.currentCompany} />\n          </div>\n          <div className=\"col-sm-7\">\n            <div className=\"zmer\">\n              <Network ref={this.state.networkComponent}>\n                <Node id=\"1000\" label={this.state.currentCompany.company_name} color=\"#000000\" x=\"0\" y=\"100\" fixed={{ x: true, y: true }} font={{ color: \"white\", size: 25 }} />\n                {this.state.partners ? <Node id=\"100\" label=\"Partenaires\" color=\"#AC3B61\" x=\"200\" y=\"200\" fixed={{ x: true, y: true }} size=\"15\" shape=\"dot\" font={{ color: \"#AC3B61\" }} /> : <Edge />}\n                {this.state.headquarter ? <Node id=\"200\" label=\"Headquarter\" color=\"#888888\" x=\"200\" y=\"0\" fixed={{ x: true, y: true }} size=\"15\" shape=\"dot\" font={{ color: \"#888888\" }} /> : <Edge />}\n                {this.state.fournisseurs ? <Node id=\"300\" label=\"Fournisseurs\" color=\"#123C69\" x=\"200\" y=\"100\" fixed={{ x: true, y: true }} size=\"15\" shape=\"dot\" font={{ color: \"#123C69\" }} /> : <Edge />}\n                {this.state.clients ? <Node id=\"400\" label=\"Clients\" color=\"#FFAE42\" size=\"15\" x=\"200\" y=\"0\" fixed={{ x: true, y: true }} shape=\"dot\" font={{ color: \"#FFAE42\" }} /> : <Edge />}\n                {this.state.filiales ? <Node id=\"500\" label=\"Filiales\" color=\"#888888\" size=\"15\" fixed={{ x: true, y: true }} shape=\"dot\" font={{ color: \"#888888\" }} /> : <Edge />}\n                {this.state.partners ? <Edge id=\"100\" from=\"1000\" smooth={{ enabled: true }} to=\"100\" /> : <Edge />}\n                {this.state.headquarter ? <Edge id=\"200\" from=\"1000\" smooth={{ enabled: true }} to=\"200\" /> : <Edge />}\n                {this.state.fournisseurs ? <Edge id=\"300\" from=\"1000\" smooth={{ enabled: true }} to=\"300\" /> : <Edge />}\n                {this.state.clients ? <Edge id=\"400\" from=\"1000\" smooth={{ enabled: true }} to=\"400\" /> : <Edge />}\n                {this.state.filiales ? <Edge id=\"500\" from=\"1000\" smooth={{ enabled: true }} to=\"500\" /> : <Edge />}\n                {partnersEdges}\n                {partnersNode}\n              </Network>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n\n  }\n}\n\nexport default CompanyPage;\n"]},"metadata":{},"sourceType":"module"}