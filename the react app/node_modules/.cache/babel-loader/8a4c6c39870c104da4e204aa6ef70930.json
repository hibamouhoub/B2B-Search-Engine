{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mh\\\\Desktop\\\\searchengine\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport CompanyNetwork from './components/CompanyNetwork';\nimport { Network, Node, Edge } from 'react-vis-network';\nimport MyNav from './components/nav';\nimport names from './names';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      networkComponent: React.createRef(),\n      currentCompany: {},\n      relations: [],\n      partners: false,\n      headquarter: false,\n      filiales: false,\n      clients: false,\n      fournisseurs: false\n    };\n  }\n\n  componentDidMount() {\n    this.state.networkComponent.current.network.on(\"click\", event => {\n      //console.log(\"clicked\", names.includes(event.nodes[0]))\n      if (names.includes(event.nodes[0])) {\n        this.props.handleNew(event.nodes[0]);\n      }\n    });\n    const api = axios.create({\n      baseURL: 'http://localhost:9200/proto/_search?q=company_name:\"' + this.props.companyName + '\"'\n    });\n    api.get('').then(async res => {\n      let var1 = res.data.hits.hits[0]._source;\n      let stringSearch = 'http://localhost:9200/proto/_search?q=id:' + var1.Partenaire__002 + '%20OR%20id:' + var1.Partenaire__001 + '%20OR%20id:' + var1[\"Clients__-\"] + '%20OR%20id:' + var1[\"filiales__-\"] + '%20OR%20id:' + var1[\"fournisseur__-\"] + '%20OR%20id:' + var1.hearquarter;\n      api.get(stringSearch).then(async ress => {\n        let relations = [];\n        let partnerz = false,\n            clients = false,\n            fournisseurs = false,\n            heads = false,\n            filiales = false;\n\n        for (let i = 0; i < ress.data.hits.hits.length; i++) {\n          relations.push(ress.data.hits.hits[i]._source);\n\n          if (var1.Partenaire__001 == ress.data.hits.hits[i]._source.id || var1.Partenaire__002 == ress.data.hits.hits[i]._source.id) {\n            partnerz = true;\n          }\n\n          if (var1[\"Clients__-\"] == ress.data.hits.hits[i]._source.id) {\n            clients = true;\n          }\n\n          if (var1[\"fournisseur__-\"] == ress.data.hits.hits[i]._source.id) {\n            fournisseurs = true;\n          }\n\n          if (var1.hearquarter == ress.data.hits.hits[i]._source.id) {\n            heads = true;\n          }\n\n          if (var1[\"filiales__-\"] == ress.data.hits.hits[i]._source.id) {\n            filiales = true;\n          }\n        } //console.log(var1, relations)\n\n\n        this.state = {\n          currentCompany: {},\n          relations: []\n        };\n        this.setState({\n          currentCompany: var1,\n          relations: relations,\n          partners: partnerz,\n          headquarter: heads,\n          filiales: filiales,\n          clients: clients,\n          fournisseurs: fournisseurs\n        });\n      });\n    });\n  }\n\n  render() {\n    const partnersNode = this.state.relations.map(partner => {\n      let colorNode;\n      let shape = \"box\";\n      let font = {\n        color: \"white\",\n        size: 20\n      };\n\n      if (partner.id == this.state.currentCompany.hearquarter || partner.id == this.state.currentCompany[\"filiales__-\"]) {\n        colorNode = \"#888888\";\n      } else {\n        if (partner.id == this.state.currentCompany.Partenaire__002 || partner.id == this.state.currentCompany.Partenaire__001) {\n          colorNode = \"#AC3B61\";\n        } else {\n          if (partner.id == this.state.currentCompany[\"fournisseur__-\"]) {\n            colorNode = \"#123C69\";\n          } else {\n            if (partner.id == this.state.currentCompany[\"Clients__-\"]) {\n              colorNode = \"#FFAE42\";\n            } else {\n              colorNode = \"#000000\";\n            }\n          }\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(Node, {\n        id: partner.company_name,\n        label: partner.company_name,\n        color: colorNode,\n        shape: shape,\n        font: font,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 14\n        }\n      });\n    });\n    const partnersEdges = this.state.relations.map(partner => {\n      if (partner.id == this.state.currentCompany.hearquarter) {\n        return /*#__PURE__*/React.createElement(Edge, {\n          id: this.state.currentCompany.id + partner.id,\n          from: \"200\",\n          to: partner.company_name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 16\n          }\n        });\n      }\n\n      if (partner.id == this.state.currentCompany.Partenaire__002 || partner.id == this.state.currentCompany.Partenaire__001) {\n        return /*#__PURE__*/React.createElement(Edge, {\n          id: this.state.currentCompany.id + partner.id,\n          from: \"100\",\n          to: partner.company_name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 16\n          }\n        });\n      }\n\n      if (partner.id == this.state.currentCompany[\"fournisseur__-\"]) {\n        return /*#__PURE__*/React.createElement(Edge, {\n          id: this.state.currentCompany.id + partner.id,\n          from: \"300\",\n          to: partner.company_name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 16\n          }\n        });\n      }\n\n      if (partner.id == this.state.currentCompany[\"Clients__-\"]) {\n        return /*#__PURE__*/React.createElement(Edge, {\n          id: this.state.currentCompany.id + partner.id,\n          from: \"400\",\n          to: partner.company_name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 16\n          }\n        });\n      }\n\n      if (partner.id == this.state.currentCompany[\"filiales__-\"]) {\n        return /*#__PURE__*/React.createElement(Edge, {\n          id: this.state.currentCompany.id + partner.id,\n          from: \"500\",\n          to: partner.company_name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 16\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(Edge, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 14\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MyNav, {\n      handleClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-4 ml-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CompanyNetwork, {\n      currentCompany: this.state.currentCompany,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"zmer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Network, {\n      ref: this.state.networkComponent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Node, {\n      id: \"1000\",\n      label: this.state.currentCompany.company_name,\n      color: \"#000000\",\n      font: {\n        color: \"white\",\n        size: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }), this.state.partners ? /*#__PURE__*/React.createElement(Node, {\n      id: \"100\",\n      label: \"Partenaires\",\n      color: \"#AC3B61\",\n      fixed: {\n        x: true,\n        y: true\n      },\n      size: \"15\",\n      shape: \"dot\",\n      font: {\n        color: \"#AC3B61\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 38\n      }\n    }) : /*#__PURE__*/React.createElement(Edge, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 172\n      }\n    }), this.state.headquarter ? /*#__PURE__*/React.createElement(Node, {\n      id: \"200\",\n      label: \"Headquarter\",\n      color: \"#888888\",\n      x: \"0\",\n      y: \"0\",\n      fixed: {\n        x: true,\n        y: true\n      },\n      size: \"15\",\n      shape: \"dot\",\n      font: {\n        color: \"#888888\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 41\n      }\n    }) : /*#__PURE__*/React.createElement(Edge, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 186\n      }\n    }), this.state.fournisseurs ? /*#__PURE__*/React.createElement(Node, {\n      id: \"300\",\n      label: \"Fournisseurs\",\n      color: \"#123C69\",\n      fixed: {\n        x: true,\n        y: true\n      },\n      size: \"15\",\n      shape: \"dot\",\n      font: {\n        color: \"#123C69\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 42\n      }\n    }) : /*#__PURE__*/React.createElement(Edge, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 176\n      }\n    }), this.state.clients ? /*#__PURE__*/React.createElement(Node, {\n      id: \"400\",\n      label: \"Clients\",\n      color: \"#FFAE42\",\n      size: \"15\",\n      fixed: {\n        x: true,\n        y: true\n      },\n      shape: \"dot\",\n      font: {\n        color: \"#FFAE42\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 37\n      }\n    }) : /*#__PURE__*/React.createElement(Edge, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 166\n      }\n    }), this.state.filiales ? /*#__PURE__*/React.createElement(Node, {\n      id: \"500\",\n      label: \"Filiales\",\n      color: \"#888888\",\n      size: \"15\",\n      fixed: {\n        x: true,\n        y: true\n      },\n      shape: \"dot\",\n      font: {\n        color: \"#888888\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 38\n      }\n    }) : /*#__PURE__*/React.createElement(Edge, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 168\n      }\n    }), this.state.partners ? /*#__PURE__*/React.createElement(Edge, {\n      id: \"100\",\n      from: \"1000\",\n      smooth: {\n        enabled: true\n      },\n      to: \"100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 38\n      }\n    }) : /*#__PURE__*/React.createElement(Edge, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 101\n      }\n    }), this.state.headquarter ? /*#__PURE__*/React.createElement(Edge, {\n      id: \"200\",\n      from: \"1000\",\n      smooth: {\n        enabled: true\n      },\n      to: \"200\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 41\n      }\n    }) : /*#__PURE__*/React.createElement(Edge, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 104\n      }\n    }), this.state.fournisseurs ? /*#__PURE__*/React.createElement(Edge, {\n      id: \"300\",\n      from: \"1000\",\n      smooth: {\n        enabled: true\n      },\n      to: \"300\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 42\n      }\n    }) : /*#__PURE__*/React.createElement(Edge, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 105\n      }\n    }), this.state.clients ? /*#__PURE__*/React.createElement(Edge, {\n      id: \"400\",\n      from: \"1000\",\n      smooth: {\n        enabled: true\n      },\n      to: \"400\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 37\n      }\n    }) : /*#__PURE__*/React.createElement(Edge, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 100\n      }\n    }), this.state.filiales ? /*#__PURE__*/React.createElement(Edge, {\n      id: \"500\",\n      from: \"1000\",\n      smooth: {\n        enabled: true\n      },\n      to: \"500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 38\n      }\n    }) : /*#__PURE__*/React.createElement(Edge, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 101\n      }\n    }), partnersEdges, partnersNode)))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Mh/Desktop/searchengine/src/App.js"],"names":["React","axios","CompanyNetwork","Network","Node","Edge","MyNav","names","App","Component","constructor","state","networkComponent","createRef","currentCompany","relations","partners","headquarter","filiales","clients","fournisseurs","componentDidMount","current","network","on","event","includes","nodes","props","handleNew","api","create","baseURL","companyName","get","then","res","var1","data","hits","_source","stringSearch","Partenaire__002","Partenaire__001","hearquarter","ress","partnerz","heads","i","length","push","id","setState","render","partnersNode","map","partner","colorNode","shape","font","color","size","company_name","partnersEdges","handleClick","x","y","enabled"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport axios from 'axios'\nimport CompanyNetwork from './components/CompanyNetwork'\nimport { Network, Node, Edge } from 'react-vis-network'\nimport MyNav from './components/nav'\nimport names from './names'\n\n\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      networkComponent: React.createRef(),\n      currentCompany: {},\n      relations: [],\n      partners: false,\n      headquarter: false,\n      filiales: false,\n      clients: false,\n      fournisseurs: false\n    }\n  }\n  componentDidMount() {\n    this.state.networkComponent.current.network.on(\"click\", event => {\n      //console.log(\"clicked\", names.includes(event.nodes[0]))\n      if (names.includes(event.nodes[0])) {\n        this.props.handleNew(event.nodes[0])\n      }\n    });\n    const api = axios.create({\n      baseURL: 'http://localhost:9200/proto/_search?q=company_name:\"' + this.props.companyName + '\"'\n    })\n    api.get('')\n      .then(async (res) => {\n        let var1 = res.data.hits.hits[0]._source\n        let stringSearch = 'http://localhost:9200/proto/_search?q=id:'\n          + var1.Partenaire__002 + '%20OR%20id:'\n          + var1.Partenaire__001 + '%20OR%20id:'\n          + var1[\"Clients__-\"] + '%20OR%20id:'\n          + var1[\"filiales__-\"] + '%20OR%20id:'\n          + var1[\"fournisseur__-\"] + '%20OR%20id:'\n          + var1.hearquarter\n        api.get(stringSearch)\n          .then(async (ress) => {\n            let relations = []\n            let partnerz = false, clients = false, fournisseurs = false, heads = false, filiales = false\n            for (let i = 0; i < ress.data.hits.hits.length; i++) {\n              relations.push(ress.data.hits.hits[i]._source)\n              if (var1.Partenaire__001 == ress.data.hits.hits[i]._source.id || var1.Partenaire__002 == ress.data.hits.hits[i]._source.id) {\n                partnerz = true\n              }\n              if (var1[\"Clients__-\"] == ress.data.hits.hits[i]._source.id) {\n                clients = true\n              }\n              if (var1[\"fournisseur__-\"] == ress.data.hits.hits[i]._source.id) {\n                fournisseurs = true\n              }\n              if (var1.hearquarter == ress.data.hits.hits[i]._source.id) {\n                heads = true\n              }\n              if (var1[\"filiales__-\"] == ress.data.hits.hits[i]._source.id) {\n                filiales = true\n              }\n            }\n            //console.log(var1, relations)\n            this.state = { currentCompany: {}, relations: [] }\n            this.setState({\n              currentCompany: var1,\n              relations: relations,\n              partners: partnerz,\n              headquarter: heads,\n              filiales: filiales,\n              clients: clients,\n              fournisseurs: fournisseurs\n            })\n          })\n      });\n  }\n\n  render() {\n    const partnersNode = this.state.relations.map(partner => {\n      let colorNode\n      let shape = \"box\"\n      let font = { color: \"white\", size: 20 }\n      if (partner.id == this.state.currentCompany.hearquarter || partner.id == this.state.currentCompany[\"filiales__-\"]) {\n        colorNode = \"#888888\"\n      } else {\n        if (partner.id == this.state.currentCompany.Partenaire__002 || partner.id == this.state.currentCompany.Partenaire__001) {\n          colorNode = \"#AC3B61\"\n        } else {\n          if (partner.id == this.state.currentCompany[\"fournisseur__-\"]) {\n            colorNode = \"#123C69\"\n          } else {\n            if (partner.id == this.state.currentCompany[\"Clients__-\"]) {\n              colorNode = \"#FFAE42\"\n            } else {\n              colorNode = \"#000000\"\n            }\n          }\n        }\n      }\n      return <Node id={partner.company_name} label={partner.company_name} color={colorNode} shape={shape} font={font} />\n    })\n\n\n    const partnersEdges = this.state.relations.map(partner => {\n      if (partner.id == this.state.currentCompany.hearquarter) {\n        return <Edge id={this.state.currentCompany.id + partner.id} from=\"200\" to={partner.company_name} />\n      }\n      if (partner.id == this.state.currentCompany.Partenaire__002 || partner.id == this.state.currentCompany.Partenaire__001) {\n        return <Edge id={this.state.currentCompany.id + partner.id} from=\"100\" to={partner.company_name} />\n      }\n      if (partner.id == this.state.currentCompany[\"fournisseur__-\"]) {\n        return <Edge id={this.state.currentCompany.id + partner.id} from=\"300\" to={partner.company_name} />\n      }\n      if (partner.id == this.state.currentCompany[\"Clients__-\"]) {\n        return <Edge id={this.state.currentCompany.id + partner.id} from=\"400\" to={partner.company_name} />\n      }\n      if (partner.id == this.state.currentCompany[\"filiales__-\"]) {\n        return <Edge id={this.state.currentCompany.id + partner.id} from=\"500\" to={partner.company_name} />\n      }\n      return <Edge />\n    })\n\n\n    return (\n      <div>\n        <MyNav handleClick={this.handleClick} />\n        <div className=\"row mt-5\">\n          <div className=\"col-sm-4 ml-5\">\n            <CompanyNetwork currentCompany={this.state.currentCompany} />\n          </div>\n          <div className=\"col-sm-7\">\n            <div className=\"zmer\">\n              <Network ref={this.state.networkComponent}>\n                <Node id=\"1000\" label={this.state.currentCompany.company_name} color=\"#000000\" font={{ color: \"white\", size: 20 }} />\n                {this.state.partners?<Node  id=\"100\" label=\"Partenaires\" color=\"#AC3B61\" fixed={{ x: true, y: true }} size=\"15\" shape=\"dot\" font={{ color: \"#AC3B61\" }} />:<Edge />}\n                {this.state.headquarter?<Node id=\"200\" label=\"Headquarter\" color=\"#888888\" x=\"0\" y=\"0\" fixed={{ x: true, y: true }} size=\"15\" shape=\"dot\" font={{ color: \"#888888\" }} />:<Edge />}\n                {this.state.fournisseurs?<Node id=\"300\" label=\"Fournisseurs\" color=\"#123C69\" fixed={{ x: true, y: true }} size=\"15\" shape=\"dot\" font={{ color: \"#123C69\" }} />:<Edge />}\n                {this.state.clients?<Node id=\"400\" label=\"Clients\" color=\"#FFAE42\" size=\"15\" fixed={{ x: true, y: true }} shape=\"dot\" font={{ color: \"#FFAE42\" }} />:<Edge />}\n                {this.state.filiales?<Node id=\"500\" label=\"Filiales\" color=\"#888888\" size=\"15\" fixed={{ x: true, y: true }} shape=\"dot\" font={{ color: \"#888888\" }} />:<Edge />}\n                {this.state.partners?<Edge id=\"100\" from=\"1000\" smooth={{enabled:true}} to=\"100\" />:<Edge />}\n                {this.state.headquarter?<Edge id=\"200\" from=\"1000\" smooth={{enabled:true}} to=\"200\" />:<Edge />}\n                {this.state.fournisseurs?<Edge id=\"300\" from=\"1000\" smooth={{enabled:true}} to=\"300\" />:<Edge />}\n                {this.state.clients?<Edge id=\"400\" from=\"1000\" smooth={{enabled:true}} to=\"400\" />:<Edge />}\n                {this.state.filiales?<Edge id=\"500\" from=\"1000\" smooth={{enabled:true}} to=\"500\" />:<Edge />}\n                {partnersEdges}\n                {partnersNode}\n              </Network>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}